[please]
version = >=9.2.3

[build]
path = /usr/local/bin:/usr/bin:/bin
; It's quite likely that anyone using Rust will have it here.
path = ~/.cargo/bin

[buildconfig]
grm-test-main = //grm:test_main
grpc-gateway-plugin = //third_party/go:protoc-gen-grpc-gateway
grpc-gateway-dep = //third_party/proto:grpc_gateway_api
grpc-gateway-go-dep = //third_party/go:grpc-gateway-runtime
grpc-swagger-plugin = //third_party/go:protoc-gen-swagger
webpack-tool = //js/webpack
rust-toolchain = //third_party/rust:toolchain
android-home = /opt/android
android-tools-version = 25.0.3
; In practice you'd set these to correct values if you wanted code signing
; for Android apps. Obviously you'd not check the release keys into your repo.
android-keystore =
android-keystore-password =
android-keystore-alias =
; This needs to be set (and installed, of course) for ThinLTO to work.
; Rather awkwardly there doesn't seem to be a way of finding it ourselves.
thinlto-plugin = /usr/lib/llvm-4.0/lib/LLVMgold.so

[cpp]
; Clang is required for ThinLTO
cctool = clang
cpptool = clang++
ldtool = gold

[proto]
protocgoplugin = //third_party/go:protoc-gen-go
grpcjavaplugin = //third_party/java:protoc-gen-grpc-java

[python]
moduledir = third_party.python

[java]
javacworker = //java/error_prone:javac_worker
sourcelevel = 7
targetlevel = 7
defaultmavenrepo = https://repo1.maven.org/maven2
defaultmavenrepo = https://maven.google.com
